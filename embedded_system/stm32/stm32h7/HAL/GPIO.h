#ifndef _GPIO_H_
#define _GPIO_H_

#include "Framework.h"

typedef enum
{
	GPIO_PIN0 = 0,
	GPIO_PIN1,
	GPIO_PIN2,
	GPIO_PIN3,
	GPIO_PIN4,
	GPIO_PIN5,
	GPIO_PIN6,
	GPIO_PIN7,
	GPIO_PIN8,
	GPIO_PIN9,
	GPIO_PIN10,
	GPIO_PIN11,
	GPIO_PIN12,
	GPIO_PIN13,
	GPIO_PIN14,
	GPIO_PIN15
} pin;

typedef enum
{
	GPIO_GROUPA = 0 << 4,
	GPIO_GROUPB = 1 << 4,
	GPIO_GROUPC = 2 << 4,
	GPIO_GROUPD = 3 << 4,
	GPIO_GROUPE = 4 << 4,
	GPIO_GROUPF = 5 << 4,
	GPIO_GROUPG = 6 << 4,
	GPIO_GROUPH = 7 << 4,
	GPIO_GROUPI = 8 << 4
} gpio_group;

typedef enum
{
	GPIOA_0 = GPIO_PIN0 + GPIO_GROUPA,
	GPIOA_1 = GPIO_PIN1 + GPIO_GROUPA,
	GPIOA_2 = GPIO_PIN2 + GPIO_GROUPA,
	GPIOA_3 = GPIO_PIN3 + GPIO_GROUPA,
	GPIOA_4 = GPIO_PIN4 + GPIO_GROUPA,
	GPIOA_5 = GPIO_PIN5 + GPIO_GROUPA,
	GPIOA_6 = GPIO_PIN6 + GPIO_GROUPA,
	GPIOA_7 = GPIO_PIN7 + GPIO_GROUPA,
	GPIOA_8 = GPIO_PIN8 + GPIO_GROUPA,
	GPIOA_9 = GPIO_PIN9 + GPIO_GROUPA,
	GPIOA_10 = GPIO_PIN10 + GPIO_GROUPA,
	GPIOA_11 = GPIO_PIN11 + GPIO_GROUPA,
	GPIOA_12 = GPIO_PIN12 + GPIO_GROUPA,
	GPIOA_13 = GPIO_PIN13 + GPIO_GROUPA,
	GPIOA_14 = GPIO_PIN14 + GPIO_GROUPA,
	GPIOA_15 = GPIO_PIN15 + GPIO_GROUPA,

	GPIOB_0 = GPIO_PIN0 + GPIO_GROUPB,
	GPIOB_1 = GPIO_PIN1 + GPIO_GROUPB,
	GPIOB_2 = GPIO_PIN2 + GPIO_GROUPB,
	GPIOB_3 = GPIO_PIN3 + GPIO_GROUPB,
	GPIOB_4 = GPIO_PIN4 + GPIO_GROUPB,
	GPIOB_5 = GPIO_PIN5 + GPIO_GROUPB,
	GPIOB_6 = GPIO_PIN6 + GPIO_GROUPB,
	GPIOB_7 = GPIO_PIN7 + GPIO_GROUPB,
	GPIOB_8 = GPIO_PIN8 + GPIO_GROUPB,
	GPIOB_9 = GPIO_PIN9 + GPIO_GROUPB,
	GPIOB_10 = GPIO_PIN10 + GPIO_GROUPB,
	GPIOB_11 = GPIO_PIN11 + GPIO_GROUPB,
	GPIOB_12 = GPIO_PIN12 + GPIO_GROUPB,
	GPIOB_13 = GPIO_PIN13 + GPIO_GROUPB,
	GPIOB_14 = GPIO_PIN14 + GPIO_GROUPB,
	GPIOB_15 = GPIO_PIN15 + GPIO_GROUPB,

	GPIOC_0 = GPIO_PIN0 + GPIO_GROUPC,
	GPIOC_1 = GPIO_PIN1 + GPIO_GROUPC,
	GPIOC_2 = GPIO_PIN2 + GPIO_GROUPC,
	GPIOC_3 = GPIO_PIN3 + GPIO_GROUPC,
	GPIOC_4 = GPIO_PIN4 + GPIO_GROUPC,
	GPIOC_5 = GPIO_PIN5 + GPIO_GROUPC,
	GPIOC_6 = GPIO_PIN6 + GPIO_GROUPC,
	GPIOC_7 = GPIO_PIN7 + GPIO_GROUPC,
	GPIOC_8 = GPIO_PIN8 + GPIO_GROUPC,
	GPIOC_9 = GPIO_PIN9 + GPIO_GROUPC,
	GPIOC_10 = GPIO_PIN10 + GPIO_GROUPC,
	GPIOC_11 = GPIO_PIN11 + GPIO_GROUPC,
	GPIOC_12 = GPIO_PIN12 + GPIO_GROUPC,
	GPIOC_13 = GPIO_PIN13 + GPIO_GROUPC,
	GPIOC_14 = GPIO_PIN14 + GPIO_GROUPC,
	GPIOC_15 = GPIO_PIN15 + GPIO_GROUPC,

	GPIOD_0 = GPIO_PIN0 + GPIO_GROUPD,
	GPIOD_1 = GPIO_PIN1 + GPIO_GROUPD,
	GPIOD_2 = GPIO_PIN2 + GPIO_GROUPD,
	GPIOD_3 = GPIO_PIN3 + GPIO_GROUPD,
	GPIOD_4 = GPIO_PIN4 + GPIO_GROUPD,
	GPIOD_5 = GPIO_PIN5 + GPIO_GROUPD,
	GPIOD_6 = GPIO_PIN6 + GPIO_GROUPD,
	GPIOD_7 = GPIO_PIN7 + GPIO_GROUPD,
	GPIOD_8 = GPIO_PIN8 + GPIO_GROUPD,
	GPIOD_9 = GPIO_PIN9 + GPIO_GROUPD,
	GPIOD_10 = GPIO_PIN10 + GPIO_GROUPD,
	GPIOD_11 = GPIO_PIN11 + GPIO_GROUPD,
	GPIOD_12 = GPIO_PIN12 + GPIO_GROUPD,
	GPIOD_13 = GPIO_PIN13 + GPIO_GROUPD,
	GPIOD_14 = GPIO_PIN14 + GPIO_GROUPD,
	GPIOD_15 = GPIO_PIN15 + GPIO_GROUPD,

	GPIOE_0 = GPIO_PIN0 + GPIO_GROUPE,
	GPIOE_1 = GPIO_PIN1 + GPIO_GROUPE,
	GPIOE_2 = GPIO_PIN2 + GPIO_GROUPE,
	GPIOE_3 = GPIO_PIN3 + GPIO_GROUPE,
	GPIOE_4 = GPIO_PIN4 + GPIO_GROUPE,
	GPIOE_5 = GPIO_PIN5 + GPIO_GROUPE,
	GPIOE_6 = GPIO_PIN6 + GPIO_GROUPE,
	GPIOE_7 = GPIO_PIN7 + GPIO_GROUPE,
	GPIOE_8 = GPIO_PIN8 + GPIO_GROUPE,
	GPIOE_9 = GPIO_PIN9 + GPIO_GROUPE,
	GPIOE_10 = GPIO_PIN10 + GPIO_GROUPE,
	GPIOE_11 = GPIO_PIN11 + GPIO_GROUPE,
	GPIOE_12 = GPIO_PIN12 + GPIO_GROUPE,
	GPIOE_13 = GPIO_PIN13 + GPIO_GROUPE,
	GPIOE_14 = GPIO_PIN14 + GPIO_GROUPE,
	GPIOE_15 = GPIO_PIN15 + GPIO_GROUPE,

	GPIOF_0 = GPIO_PIN0 + GPIO_GROUPF,
	GPIOF_1 = GPIO_PIN1 + GPIO_GROUPF,
	GPIOF_2 = GPIO_PIN2 + GPIO_GROUPF,
	GPIOF_3 = GPIO_PIN3 + GPIO_GROUPF,
	GPIOF_4 = GPIO_PIN4 + GPIO_GROUPF,
	GPIOF_5 = GPIO_PIN5 + GPIO_GROUPF,
	GPIOF_6 = GPIO_PIN6 + GPIO_GROUPF,
	GPIOF_7 = GPIO_PIN7 + GPIO_GROUPF,
	GPIOF_8 = GPIO_PIN8 + GPIO_GROUPF,
	GPIOF_9 = GPIO_PIN9 + GPIO_GROUPF,
	GPIOF_10 = GPIO_PIN10 + GPIO_GROUPF,
	GPIOF_11 = GPIO_PIN11 + GPIO_GROUPF,
	GPIOF_12 = GPIO_PIN12 + GPIO_GROUPF,
	GPIOF_13 = GPIO_PIN13 + GPIO_GROUPF,
	GPIOF_14 = GPIO_PIN14 + GPIO_GROUPF,
	GPIOF_15 = GPIO_PIN15 + GPIO_GROUPF,

	GPIOG_0 = GPIO_PIN0 + GPIO_GROUPG,
	GPIOG_1 = GPIO_PIN1 + GPIO_GROUPG,
	GPIOG_2 = GPIO_PIN2 + GPIO_GROUPG,
	GPIOG_3 = GPIO_PIN3 + GPIO_GROUPG,
	GPIOG_4 = GPIO_PIN4 + GPIO_GROUPG,
	GPIOG_5 = GPIO_PIN5 + GPIO_GROUPG,
	GPIOG_6 = GPIO_PIN6 + GPIO_GROUPG,
	GPIOG_7 = GPIO_PIN7 + GPIO_GROUPG,
	GPIOG_8 = GPIO_PIN8 + GPIO_GROUPG,
	GPIOG_9 = GPIO_PIN9 + GPIO_GROUPG,
	GPIOG_10 = GPIO_PIN10 + GPIO_GROUPG,
	GPIOG_11 = GPIO_PIN11 + GPIO_GROUPG,
	GPIOG_12 = GPIO_PIN12 + GPIO_GROUPG,
	GPIOG_13 = GPIO_PIN13 + GPIO_GROUPG,
	GPIOG_14 = GPIO_PIN14 + GPIO_GROUPG,
	GPIOG_15 = GPIO_PIN15 + GPIO_GROUPG,

	GPIOH_0 = GPIO_PIN0 + GPIO_GROUPH,
	GPIOH_1 = GPIO_PIN1 + GPIO_GROUPH,
	GPIOH_2 = GPIO_PIN2 + GPIO_GROUPH,
	GPIOH_3 = GPIO_PIN3 + GPIO_GROUPH,
	GPIOH_4 = GPIO_PIN4 + GPIO_GROUPH,
	GPIOH_5 = GPIO_PIN5 + GPIO_GROUPH,
	GPIOH_6 = GPIO_PIN6 + GPIO_GROUPH,
	GPIOH_7 = GPIO_PIN7 + GPIO_GROUPH,
	GPIOH_8 = GPIO_PIN8 + GPIO_GROUPH,
	GPIOH_9 = GPIO_PIN9 + GPIO_GROUPH,
	GPIOH_10 = GPIO_PIN10 + GPIO_GROUPH,
	GPIOH_11 = GPIO_PIN11 + GPIO_GROUPH,
	GPIOH_12 = GPIO_PIN12 + GPIO_GROUPH,
	GPIOH_13 = GPIO_PIN13 + GPIO_GROUPH,
	GPIOH_14 = GPIO_PIN14 + GPIO_GROUPH,
	GPIOH_15 = GPIO_PIN15 + GPIO_GROUPH,

	GPIOI_0 = GPIO_PIN0 + GPIO_GROUPI,
	GPIOI_1 = GPIO_PIN1 + GPIO_GROUPI,
	GPIOI_2 = GPIO_PIN2 + GPIO_GROUPI,
	GPIOI_3 = GPIO_PIN3 + GPIO_GROUPI,
	GPIOI_4 = GPIO_PIN4 + GPIO_GROUPI,
	GPIOI_5 = GPIO_PIN5 + GPIO_GROUPI,
	GPIOI_6 = GPIO_PIN6 + GPIO_GROUPI,
	GPIOI_7 = GPIO_PIN7 + GPIO_GROUPI,
	GPIOI_8 = GPIO_PIN8 + GPIO_GROUPI,
	GPIOI_9 = GPIO_PIN9 + GPIO_GROUPI,
	GPIOI_10 = GPIO_PIN10 + GPIO_GROUPI,
	GPIOI_11 = GPIO_PIN11 + GPIO_GROUPI,
	GPIOI_12 = GPIO_PIN12 + GPIO_GROUPI,
	GPIOI_13 = GPIO_PIN13 + GPIO_GROUPI,
	GPIOI_14 = GPIO_PIN14 + GPIO_GROUPI,
	GPIOI_15 = GPIO_PIN15 + GPIO_GROUPI,

	GPIO_NONE
} gpio;

#define GPIO_Get_GroupAddr(x) ((GPIO_TypeDef *)((((x)&0xf0) << 6) + GPIOA_BASE))
#define GPIO_Get_PinNum(x) ((x)&0xf)
#define GPIO_Get_PinAddr(x) (1 << GPIO_Get_PinNum(x))
#define GPIO_Get_PinAddr2(x) (1 << (GPIO_Get_PinNum(x) << 1))

typedef enum
{
	GPIO_MODE_IN,
	GPIO_MODE_OUT,
	GPIO_MODE_AF,
	GPIO_MODE_ANALOG
} gpio_mode;

typedef enum
{
	GPIO_OTYPE_PP,
	GPIO_OTYPE_OD
} gpio_otype;

typedef enum
{
	GPIO_OSPEED_LOW,
	GPIO_OSPEED_MID,
	GPIO_OSPEED_HIGH,
	GPIO_OSPEED_ULTRAL
} gpio_ospeed;

typedef enum
{
	GPIO_PUPD_NONE,
	GPIO_PUPD_PU,
	GPIO_PUPD_PD
} gpio_pupd;

typedef enum
{
	GPIO_AF_MCO_SWD_SWCLK = 0,
	GPIO_AF_RTC = 0,
	GPIO_AF_TIM1_2_16_17 = 1,
	GPIO_AF_LPTIM1 = 1,
	GPIO_AF_TIM3_4_5_12 = 2,
	GPIO_AF_HRTIM1_SAI1 = 2,
	GPIO_AF_TIM8 = 3,
	GPIO_AF_LPTIM2_3_4_5 = 3,
	GPIO_AF_HRTIM1 = 3,
	GPIO_AF_LPUART1 = 3,
	GPIO_AF_I2C_1_2_3 = 4,
	GPIO_AF_TIM15 = 4,
	GPIO_AF_SPI1_2_3_4_5_6 = 5,
	GPIO_AF_SPI3 = 6,
	GPIO_AF_SAI1_3 = 6,
	GPIO_AF_USART1_2_3 = 7,
	GPIO_AF_USART4_5_6 = 8,
	GPIO_AF_CAN1_2 = 9,
	GPIO_AF_TIM12_13_14 = 9,
	GPIO_AF_OTG_FS_OTG_HS = 10,
	GPIO_AF_ETH = 11,
	GPIO_AF_FMC = 12,
	GPIO_AF_SDIO_OTG_HS_1 = 12,
	GPIO_AF_DCMI = 13,
	GPIO_AF_LCD = 14,
	GPIO_AF_EVENTOUT = 15
} gpio_af;

void GPIO_Mode_Set(gpio io, gpio_mode mode);
void GPIO_OutputType_Set(gpio io, gpio_otype otype);
void GPIO_OutputSpeed_Set(gpio io, gpio_ospeed ospeed);
void GPIO_PullUpDown_Set(gpio io, gpio_pupd pupd);
void GPIO_Set(gpio io, gpio_mode mode, gpio_otype otype, gpio_ospeed ospeed, gpio_pupd pupd);
void GPIO_AF_Set(gpio io, gpio_af af);
void GPIO_Write(gpio io, uint8_t status);
uint8_t GPIO_Read(gpio io);

void _GPIO_Set(GPIO_TypeDef *GPIOx, uint32_t BITx, uint32_t MODE, uint32_t OTYPE, uint32_t OSPEED, uint32_t PUPD);
void _GPIO_AF_Set(GPIO_TypeDef *GPIOx, uint8_t BITx, uint8_t AFx);

#endif
